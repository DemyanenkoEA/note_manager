from datetime import datetime
from datetime import date
# Импортирование собственных функции
from utils_function import is_valid_date


def create_note() -> dict:
    # Объявляем словарь для хранения информации о заметке.
    # Объявляем переменные и запрашиваем информацию у пользователя.
    note = dict()
    # Имя пользователя
    note["username"] = input("Введите имя пользователя: ").strip()
    # Ввод заметки
    # Цикл проверки ввода заголовка
    while True:
        # Запрашиваем ввод заголовка пользователем, полученной строке обрезаем ненужные пробелы
        note["title"] = input("Введите заголовок заметки (не должен быть пустым): ").strip()
        # Проверяем пустая ли строка
        if note["title"] == '':
            # Если строка пуста, выводим сообщение об ошибке
            input("Вы указали пустой заголовок заметки! Для продолжения нажмите Enter")
            # Возвращаемся к началу цикла ввода
            continue
        # Если строка не пустая выходим из цикла
        break
    # Описание заметки
    # Цикл проверки ввода описания заметки
    while True:
        # Запрашиваем ввод описания пользователем, полученной строке обрезаем ненужные пробелы
        note["content"] = input("Введите описание заметки (не должно быть пустым): ").strip()
        # Проверяем пустая ли строка
        if not note["content"]:
            # Если строка пуста, выводим сообщение об ошибке
            input("Вы указали пустое описание заметки! Для продолжения нажмите Enter")
            # Возвращаемся к началу цикла ввода
            continue
        # Если строка не пустая выходим из цикла
        break
    # Статус заметки
    # Объявляем словарь с вариантами статусов заметок, каждому варианту статуса указываем свою цифру
    note_statuses = {1: 'Новая', 2: 'В процессе', 3: 'Выполнена'}
    # Цикл, выбора статуса заметки из словаря статусов
    while True:
        # Выводим меню выбора статуса заметки
        print("Выберите статус заметки:")
        # Цикл отображения вариантов статуса заметки
        for k,v in note_statuses.items():
            print(f"\t{k}. {v}")
        # Просим произвести выбор варианта
        # Введенные данные сразу преобразовываем в int
        try:
            # В случае если введено не число, то вызывается исключение ValueError
            variant = int(input("Ваш вариант: ").strip())
            # Элементу статуса словаря заметки присваиваем значение словаря с указанным вариантом ключа, иначе KeyError
            note['status'] = note_statuses[variant]
            # Прекращаем цикл
            break
        except ValueError:
            input('Неправильный ввод! Для повтора нажмите Enter')
            continue
        except KeyError:
            input('Вы указали неверный вариант статуса! Для повтора нажмите Enter')
            continue

    # Присвоение даты создания заметки, вызовом функцией ввода даты создания
    note["created_date"] = datetime.today().strftime('%d-%m-%Y')
    # Присвоение даты когда истекает заметка.
    # Цикл проверки ввода правильной даты
    while True:
        # Дата истечения заметки (дедлайн) в формате "день-месяц-год", например "10-12-2024"
        note['issue_date'] = input("Введите дату истечения заметки в формате 'день-месяц-год': ").strip()
        if not is_valid_date(note['issue_date']):
            print('Вы указали неверный формат даты!')
            input("Для продолжения нажмите Enter")
            continue
        if datetime.strptime(note['issue_date'], '%d-%m-%Y').date() <= date.today():
            print("Дата истечения срока заметки не может быть раньше даты создания заметки!")
            input("Для продолжения нажмите Enter")
            continue
        break
    return note


# Проверка запуска локального файла
if __name__ == "__main__":
    note = create_note()
    print("Заметка создана: ", note)
